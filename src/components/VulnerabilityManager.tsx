import { AlertTriangle, Shield, Search, Filter, Download, ExternalLink, Clock, Target } from "lucide-react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Progress } from "@/components/ui/progress";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";

export const VulnerabilityManager = () => {
  const vulnerabilities = [
    {
      id: "CVE-2024-3400",
      title: "Palo Alto Networks PAN-OS Command Injection Vulnerability",
      score: 10.0,
      severity: "Critical",
      category: "Network Security",
      published: "2024-04-12",
      description: "A command injection vulnerability in Palo Alto Networks PAN-OS software enables an unauthenticated attacker to execute arbitrary code with root privileges on the firewall.",
      affected: "PAN-OS 10.2, 11.0, 11.1",
      exploited: true,
      trending: true
    },
    {
      id: "CVE-2024-21887",
      title: "Ivanti Connect Secure Authentication Bypass",
      score: 9.1,
      severity: "Critical", 
      category: "VPN/Remote Access",
      published: "2024-01-31",
      description: "An authentication bypass vulnerability allows attackers to access restricted resources and potentially execute arbitrary commands.",
      affected: "Ivanti Connect Secure 9.x, 22.x",
      exploited: true,
      trending: false
    },
    {
      id: "CVE-2024-1086",
      title: "Linux Kernel Use-After-Free Privilege Escalation",
      score: 7.8,
      severity: "High",
      category: "Operating System",
      published: "2024-01-31",
      description: "A use-after-free vulnerability in the Linux kernel allows local attackers to escalate privileges.",
      affected: "Linux Kernel 5.14-6.6",
      exploited: false,
      trending: true
    }
  ];

  const stats = [
    {
      title: "Critical CVEs",
      value: "847",
      change: "+23",
      trend: "up",
      icon: AlertTriangle,
      color: "destructive"
    },
    {
      title: "Actively Exploited",
      value: "156", 
      change: "+12",
      trend: "up",
      icon: Target,
      color: "default"
    },
    {
      title: "Patched Systems",
      value: "89%",
      change: "+3%", 
      trend: "up",
      icon: Shield,
      color: "default"
    }
  ];

  return (
    <div className="p-6 space-y-6">
      {/* Header */}
      <div className="flex flex-col space-y-4">
        <div>
          <h1 className="text-3xl font-bold text-foreground">Vulnerability Management</h1>
          <p className="text-muted-foreground">Track and prioritize CVEs with AI-powered risk assessment</p>
        </div>

        {/* Search and Filters */}
        <div className="flex flex-col sm:flex-row gap-4">
          <div className="relative flex-1">
            <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-muted-foreground" />
            <Input
              placeholder="Search CVE IDs, vendors, products..."
              className="pl-10 bg-input border-border"
            />
          </div>
          
          <div className="flex gap-2">
            <Select defaultValue="all-severity">
              <SelectTrigger className="w-36">
                <Filter className="w-4 h-4 mr-2" />
                <SelectValue />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="all-severity">All Severity</SelectItem>
                <SelectItem value="critical">Critical (9.0-10.0)</SelectItem>
                <SelectItem value="high">High (7.0-8.9)</SelectItem>
                <SelectItem value="medium">Medium (4.0-6.9)</SelectItem>
              </SelectContent>
            </Select>

            <Select defaultValue="all-status">
              <SelectTrigger className="w-40">
                <SelectValue />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="all-status">All Status</SelectItem>
                <SelectItem value="exploited">Actively Exploited</SelectItem>
                <SelectItem value="trending">Trending</SelectItem>
                <SelectItem value="patched">Patched Available</SelectItem>
              </SelectContent>
            </Select>
          </div>
        </div>
      </div>

      {/* Stats Grid */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
        {stats.map((stat, index) => {
          const Icon = stat.icon;
          return (
            <Card key={index} className={`bg-card border-border ${stat.color === "destructive" ? "threat-glow" : ""}`}>
              <CardContent className="p-6">
                <div className="flex items-center justify-between">
                  <div>
                    <p className="text-sm text-muted-foreground font-medium">{stat.title}</p>
                    <div className="flex items-baseline space-x-2">
                      <p className="text-3xl font-bold text-foreground">{stat.value}</p>
                      <Badge variant={stat.color === "destructive" ? "destructive" : "secondary"} className="text-xs">
                        {stat.change}
                      </Badge>
                    </div>
                  </div>
                  <div className={`p-3 rounded-lg ${stat.color === "destructive" ? "bg-destructive/10" : "bg-primary/10"}`}>
                    <Icon className={`w-6 h-6 ${stat.color === "destructive" ? "text-destructive" : "text-primary"}`} />
                  </div>
                </div>
              </CardContent>
            </Card>
          );
        })}
      </div>

      {/* Vulnerability List */}
      <Card className="bg-card border-border">
        <CardHeader>
          <div className="flex items-center justify-between">
            <CardTitle className="flex items-center space-x-2">
              <AlertTriangle className="w-5 h-5 text-primary" />
              <span>High Priority Vulnerabilities</span>
            </CardTitle>
            <div className="flex gap-2">
              <Button variant="outline" size="sm">
                <Download className="w-4 h-4 mr-2" />
                Export CVEs
              </Button>
            </div>
          </div>
        </CardHeader>
        
        <CardContent className="space-y-4">
          {vulnerabilities.map((vuln, index) => {
            const severityColor = vuln.severity === "Critical" ? "destructive" : "default";
            const scoreColor = vuln.score >= 9.0 ? "text-destructive" : 
                             vuln.score >= 7.0 ? "text-warning" : "text-muted-foreground";
            
            return (
              <div key={index} className={`p-4 rounded-lg border border-border hover:border-primary/30 transition-all duration-200 cursor-pointer ${vuln.severity === "Critical" ? "bg-destructive/5" : ""}`}>
                <div className="flex items-start justify-between mb-3">
                  <div className="flex items-center space-x-3">
                    <Badge variant={severityColor} className="text-xs font-semibold">
                      {vuln.severity}
                    </Badge>
                    <span className={`text-lg font-bold ${scoreColor}`}>
                      {vuln.score}
                    </span>
                    {vuln.exploited && (
                      <Badge variant="destructive" className="text-xs animate-pulse">
                        Actively Exploited
                      </Badge>
                    )}
                    {vuln.trending && (
                      <Badge variant="outline" className="text-xs border-warning text-warning">
                        Trending
                      </Badge>
                    )}
                    <span className="text-xs text-muted-foreground flex items-center">
                      <Clock className="w-3 h-3 mr-1" />
                      {vuln.published}
                    </span>
                  </div>
                  <Button variant="ghost" size="sm">
                    <ExternalLink className="w-4 h-4" />
                  </Button>
                </div>
                
                <div className="mb-3">
                  <h4 className="font-semibold text-foreground mb-1">{vuln.id}: {vuln.title}</h4>
                  <p className="text-sm text-muted-foreground mb-2">{vuln.description}</p>
                  <div className="grid grid-cols-1 sm:grid-cols-2 gap-2 text-sm">
                    <div>
                      <span className="text-muted-foreground">Category: </span>
                      <span className="text-foreground">{vuln.category}</span>
                    </div>
                    <div>
                      <span className="text-muted-foreground">Affected: </span>
                      <span className="text-foreground">{vuln.affected}</span>
                    </div>
                  </div>
                </div>
                
                <div className="flex items-center justify-between">
                  <div className="flex space-x-4 text-xs">
                    <div className="flex items-center space-x-2">
                      <div className="w-2 h-2 bg-primary rounded-full"></div>
                      <span className="text-muted-foreground">Risk Score: {vuln.score}/10</span>
                    </div>
                  </div>
                  
                  <div className="w-32">
                    <Progress value={vuln.score * 10} className="h-2" />
                  </div>
                </div>
              </div>
            );
          })}
        </CardContent>
      </Card>
    </div>
  );
};